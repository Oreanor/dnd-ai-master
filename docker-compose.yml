version: '3.8'

services:
  # Next.js Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "3000:3000"  # Next.js app
      - "3001:3001"  # Socket server
    environment:
      - NODE_ENV=development
      - NEXT_PUBLIC_SOCKET_URL=http://localhost:3001
      - SOCKET_PORT=3001
      - SOCKET_PATH=/api/socket_io
      - SOCKET_CORS_ORIGIN=http://localhost:3000
      - COHERE_API_KEY=${COHERE_API_KEY}
      - NEXTAUTH_SECRET=${NEXTAUTH_SECRET}
      - NEXTAUTH_URL=http://localhost:3000
    volumes:
      - .:/app
      - /app/node_modules
      - /app/.next
    depends_on:
      - redis
    networks:
      - dnd-network

  # Redis for caching and rate limiting
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    networks:
      - dnd-network

  # PostgreSQL for data persistence (optional)
  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=dnd_ai
      - POSTGRES_USER=dnd_user
      - POSTGRES_PASSWORD=dnd_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - dnd-network

  # Nginx reverse proxy
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - app
    networks:
      - dnd-network

volumes:
  redis_data:
  postgres_data:

networks:
  dnd-network:
    driver: bridge
